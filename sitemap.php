<?php
/*********************************************
        Hoover's Sitemap Generator
*********************************************/

require_once('./wp-blog-header.php');

header("HTTP/1.1 200 OK");
header( 'Content-Type: application/xml' );

// Up to 50000 entries are allowed per Sitemap file.
// If you need more than the 25,000,000 entries this setting (500)
// allows, you should probably write your own sitemap.
define("POSTS_PER_SITEMAP_FILE", 500);

// check if a page is selected
// if numeric, show the proper page of the sitemap
// if not set, display a sitemap index, unless
// the static indicator is set, which indicates the static sitemap
$smp = isset($_GET['smp']) ? $_GET['smp'] : false;

if($smp) {


	echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n";
	echo "<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"\n";
	echo " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n";
	echo " xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9\n";
	echo " http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\">\n";

	// Please don't delete this; I will be sad.  :'(
	echo " <!--                                                     -->\n";
	echo " <!--   Sitemap generated by Hoover's Sitemap Generator   -->\n";
	echo " <!--            http://wpsitemap.hoovism.com             -->\n";
	echo " <!--                                                     -->\n";

	if(is_numeric($smp)) {
		// generate the requested section of the sitemap that contains posts only
		$smp = abs($smp);

		$query = new WP_Query(array(
				'post_type' => 'post',
				'orderby' => 'date',
				'order' => 'ASC',
				'paged' => get_query_var('page') ? 
						get_query_var('page') : 1,
				'posts_per_page' => POSTS_PER_SITEMAP_FILE
				)
			);

		while ($query->have_posts()) : $query->the_post();

			$permalink = get_permalink();
			$modified_date = the_modified_date('Y-m-d\TH:i:s', '', '', false).
						w3c_tz_str(get_option('gmt_offset'));
			echo " <url>\n";
			echo "  <loc>".$permalink."</loc>\n";
			echo "  <lastmod>".$modified_date."</lastmod>\n";
			echo "  <changefreq>monthly</changefreq>\n";
			echo "  <priority>0.75</priority>\n";
			echo " </url>\n";

		endwhile;


	}
	else if($smp == "static") {
		// pages - add the home page and other static stuffs
		echo " <url>\n";
		echo "  <loc>".get_site_url()."</loc>\n";
		echo "  <changefreq>daily</changefreq>\n";
		echo "  <priority>0.9</priority>\n";
		echo " </url>\n";

		$query = new WP_Query(array(
				'post_type' => 'page',
				'orderby' => 'date',
				'order' => 'ASC'
				)
			);

		while($query->have_posts()) : $query->the_post();
			$permalink = get_permalink();
			$modified_date = the_modified_date('Y-m-d\TH:i:s', '', '', false).
						w3c_tz_str(get_option('gmt_offset'));

			echo " <url>\n";
			echo "  <loc>".$permalink."</loc>\n";
			echo "  <lastmod>".$modified_date."</lastmod>\n";
			echo "  <changefreq>weekly</changefreq>\n";
			echo "  <priority>0.5</priority>\n";
			echo " </url>\n";

		endwhile;

	}


	echo "</urlset>";

}
else {


	$query = new WP_Query(array('post_type' => 'post', 'orderby' => 'date', 'order' => 'ASC', 'posts_per_page' => POSTS_PER_SITEMAP_FILE));

	echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n";
	echo "<sitemapindex xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n";
	echo " <!--                                                     -->\n";
	echo " <!--   Sitemap generated by Hoover's Sitemap Generator   -->\n";
	echo " <!--               http://www.hoovism.com                -->\n";
	echo " <!--                                                     -->\n";
	echo " <sitemap>\n";
	echo "  <loc>".get_site_url()."/sitemap.php?smp=static</loc>\n";
	echo " </sitemap>\n";


	for($i = 1; $i <= $query->max_num_pages; $i++) {
		echo " <sitemap>\n";
		echo "  <loc>".get_site_url()."/sitemap.php?smp=".$i."</loc>\n";
		echo " </sitemap>\n";
	}

	echo "</sitemapindex>";

}


function w3c_tz_str($dec_offset) {
	if($dec_offset < 0) {
		$sign = "-";
		$dec_offset = abs($dec_offset);
	}
	else {
		$sign = "+";
	}

	$hours = intval($dec_offset);
	$minutes = ($dec_offset - $hours) * 60;
	return $sign.leading_zero($hours).":".leading_zero($minutes);
}

function leading_zero($str, $digits=2) {
	while(strlen($str) < $digits) {
		$str = "0".$str;
	}

	return $str;
}


?>
