<?php

/**
 * Plugin Name: Hoover's Sitemap Generator
 * Plugin URI:  http://wpsitemap.hoovism.com
 * Description: Hoover's XML Sitemap Generator for Wordpress
 * Author:      Matthew Hoover
 * Author URI:  http://www.hoovism.com
 * Version:     1.0
 * Text Domain: hoovers-sitemap-generator
 */


function hoovers_sitemap_generator_activate() {
	hoovers_sitemap_generator_rules();
	flush_rewrite_rules();
}


function hoovers_sitemap_generator_deactivate() {
	flush_rewrite_rules();
}

function hoovers_sitemap_generator_rules() {
	add_rewrite_rule("sitemap/([0-9]|[0-9]+)/?$", 'index.php?pagename=sitemap&smp=$matches[1]', "top");
	add_rewrite_rule('sitemap/static/?$', 'index.php?pagename=sitemapstatic', 'top');
	add_rewrite_rule('sitemap/?$', 'index.php?pagename=sitemapindex', 'top');
}

function hoovers_sitemap_generator_query_vars($vars) {
	$vars[] = 'smp';
	return $vars;
}

function hoovers_sitemap_generator_display() {
	$page = get_query_var("pagename");
	$smp = get_query_var('smp');


	if($page == 'sitemap') {

		hoovers_sitemap_header();

		$query = new WP_Query(array(
				'post_type' => 'post',
				'orderby' => 'date',
				'order' => 'ASC',
				'paged' => $smp ? 
						$smp : 1,
				'posts_per_page' => 5000
				)
			);

		while ($query->have_posts()) : $query->the_post();

			$permalink = get_permalink();
			$modified_date = the_modified_date('Y-m-d\TH:i:s', '', '', false).
						w3c_tz_str(get_option('gmt_offset'));
			echo " <url>\n";
			echo "  <loc>".$permalink."</loc>\n";
			echo "  <lastmod>".$modified_date."</lastmod>\n";
			echo "  <changefreq>monthly</changefreq>\n";
			echo "  <priority>0.75</priority>\n";
			echo " </url>\n";

		endwhile;


		hoovers_sitemap_footer();
		exit();
	}
	else if($page == 'sitemapstatic') {
		hoovers_sitemap_header();

		$query = new WP_Query(array(
				'post_type' => 'page',
				'orderby' => 'date',
				'order' => 'ASC'
				)
			);

		while($query->have_posts()) : $query->the_post();
			$permalink = get_permalink();
			$modified_date = the_modified_date('Y-m-d\TH:i:s', '', '', false).
						w3c_tz_str(get_option('gmt_offset'));

			echo " <url>\n";
			echo "  <loc>".$permalink."</loc>\n";
			echo "  <lastmod>".$modified_date."</lastmod>\n";
			echo "  <changefreq>weekly</changefreq>\n";
			echo "  <priority>0.5</priority>\n";
			echo " </url>\n";

		endwhile;

		hoovers_sitemap_footer();
		exit();
	}
	else if($page == 'sitemapindex') {
		hoovers_sitemap_index_header();

		$query = new WP_Query(array(
					'post_type' => 'post',
					'orderby' => 'date',
					'order' => 'ASC',
					'posts_per_page' => 5000
					)
				);

		echo " <sitemap>\n";
		echo "  <loc>".get_site_url()."/sitemap/static/</loc>\n";
		echo " </sitemap>\n";

		for($i = 1; $i <= $query->max_num_pages; $i++) {
			echo " <sitemap>\n";
			echo "  <loc>".get_site_url()."/sitemap/".$i."/</loc>\n";
			echo " </sitemap>\n";
		}

		hoovers_sitemap_index_footer();
		exit();
	}

}

function hoovers_sitemap_comment() {
	// Please don't delete this; I will be sad.  :'(
	echo " <!--                                                     -->\n";
	echo " <!--   Sitemap generated by Hoover's Sitemap Generator   -->\n";
	echo " <!--            http://wpsitemap.hoovism.com             -->\n";
	echo " <!--                                                     -->\n";
}

function hoovers_sitemap_header() {
	echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n";
	echo "<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"\n";
	echo " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n";
	echo " xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9\n";
	echo " http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\">\n";

	hoovers_sitemap_comment();
}

function hoovers_sitemap_index_header() {
	echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n";
	echo "<sitemapindex xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n";

	hoovers_sitemap_comment();
}

function hoovers_sitemap_footer() {
	echo "</urlset>";
}

function hoovers_sitemap_index_footer() {
	echo "</sitemapindex>";
}

function w3c_tz_str($dec_offset) {
	if($dec_offset < 0) {
		$sign = "-";
		$dec_offset = abs($dec_offset);
	}
	else {
		$sign = "+";
	}

	$hours = intval($dec_offset);
	$minutes = ($dec_offset - $hours) * 60;
	return $sign.leading_zero($hours).":".leading_zero($minutes);
}

function leading_zero($str, $digits=2) {
	while(strlen($str) < $digits) {
		$str = "0".$str;
	}

	return $str;
}





register_activation_hook(__FILE__, 'hoovers_sitemap_generator_activate');
register_deactivation_hook(__FILE__, 'hoovers_sitemap_generator_deactivate');
add_action('init', 'hoovers_sitemap_generator_rules');
add_filter('query_vars', 'hoovers_sitemap_generator_query_vars');
add_filter('template_redirect', 'hoovers_sitemap_generator_display');


?>
